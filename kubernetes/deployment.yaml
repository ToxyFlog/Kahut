--- # Next
apiVersion: v1
kind: Service
metadata:
    name: node-port
spec:
    type: NodePort
    selector:
        app: next
    ports:
        - protocol: TCP
          targetPort: 3000
          port: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: ingress
    annotations:
        kubernetes.io/ingress.global-static-ip-name: static-ip
        kubernetes.io/ingress.allow-http: 'false'
spec:
    tls:
        - secretName: tls
    defaultBackend:
        service:
            name: node-port
            port:
                number: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: next-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: next
    template:
        metadata:
            labels:
                app: next
        spec:
            containers:
                - name: kahut
                  image: toxyk1627/kahut:latest
                  imagePullPolicy: 'Always'
                  ports:
                      - containerPort: 3000
                  env:
                      - name: DB_CONNECTION_STRING
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: DB_CONNECTION_STRING
                      - name: REDIS_CONNECTION_STRING
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: REDIS_CONNECTION_STRING
                      - name: OAUTH_CLIENT_ID
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: OAUTH_CLIENT_ID
                      - name: OAUTH_SECRET
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: OAUTH_SECRET
                      - name: IMG_UPLOAD_API_KEY
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: IMG_UPLOAD_API_KEY
                      - name: JWT_KEY
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: JWT_KEY
                      - name: URL
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: URL
--- # Postgres
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: postgres-volume-claim
spec:
    storageClassName: standard-rwo
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
    name: postgres-service
spec:
    selector:
        app: postgres
    ports:
        - protocol: TCP
          targetPort: 5432
          port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: postgres-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: postgres
    template:
        metadata:
            labels:
                app: postgres
        spec:
            volumes:
                - name: postgres-volume
                  persistentVolumeClaim:
                      claimName: postgres-volume-claim
            containers:
                - name: postgres
                  image: postgres:15-alpine
                  ports:
                      - containerPort: 5432
                  volumeMounts:
                      - name: postgres-volume
                        mountPath: /data
                  env:
                      - name: POSTGRES_USER
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: USERNAME
                      - name: POSTGRES_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: PASSWORD
                      - name: POSTGRES_DB
                        value: kahut
                      - name: PGDATA
                        value: /data/pgdata
--- # Redis
apiVersion: v1
kind: Service
metadata:
    name: redis-service
spec:
    selector:
        app: redis
    ports:
        - protocol: TCP
          targetPort: 6379
          port: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: redis-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: redis
    template:
        metadata:
            labels:
                app: redis
        spec:
            containers:
                - name: redis
                  image: redis:7-alpine
                  command: ['/bin/sh', '-c', 'redis-server --requirepass $PASSWORD']
                  ports:
                      - containerPort: 6379
                  env:
                      - name: PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: secret
                                key: PASSWORD
